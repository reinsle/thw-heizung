<?php

/**
 * This is the model base class for the table "tbl_user".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "User".
 *
 * Columns in table "tbl_user" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $email
 * @property string $password
 * @property integer $create_time
 * @property integer $update_time
 * @property integer $last_login_time
 *
 */
abstract class BaseUser extends GxActiveRecord
{

    public static function model($className = __CLASS__)
    {
        return parent::model($className);
    }

    public static function label($n = 1)
    {
        return Yii::t('app', 'User|Users', $n);
    }

    public static function representingColumn()
    {
        return 'email';
    }

    public function tableName()
    {
        return 'tbl_user';
    }

    public function rules()
    {
        return array(
            array('email, password, create_time, update_time', 'required'),
            array('create_time, update_time, last_login_time', 'numerical', 'integerOnly' => true),
            array('email, password', 'length', 'max' => 128),
            array('last_login_time', 'default', 'setOnEmpty' => true, 'value' => null),
            array('id, email, password, create_time, update_time, last_login_time', 'safe', 'on' => 'search'),
        );
    }

    public function relations()
    {
        return array();
    }

    public function pivotModels()
    {
        return array();
    }

    public function attributeLabels()
    {
        return array(
            'id' => Yii::t('app', 'ID'),
            'email' => Yii::t('app', 'Email'),
            'password' => Yii::t('app', 'Password'),
            'create_time' => Yii::t('app', 'Create Time'),
            'update_time' => Yii::t('app', 'Update Time'),
            'last_login_time' => Yii::t('app', 'Last Login Time'),
        );
    }

    public function search()
    {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('email', $this->email, true);
        $criteria->compare('password', $this->password, true);
        $criteria->compare('create_time', $this->create_time);
        $criteria->compare('update_time', $this->update_time);
        $criteria->compare('last_login_time', $this->last_login_time);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }
}